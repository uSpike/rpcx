[tool.poetry]
name = "rpcx"
version = "0.3.0"
description = "Asynchronous RPC client/server with streaming support"
authors = ["Jordan Speicher <jordan@jspeicher.com>"]
license = "MIT"
repository = "https://github.com/uSpike/rpcx"
readme = "README.md"
classifiers = [
    "Framework :: AnyIO",
    "Framework :: AsyncIO",
    "Framework :: Trio",
    "Development Status :: 4 - Beta",
    "Topic :: Software Development :: Libraries",
]
packages = [
    { include = "rpcx", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.9"
anyio = "^4"
msgpack = "^1"
websockets = "^15.0.0"

[tool.poetry.dev-dependencies]
msgpack-types = "^0.5.0"
pytest = "^8.0.0"
mypy = "^1.0"
pytest-cov = "^7.0.0"
trio = "^0.31.0"
pytest-mock = "^3.7"
tox = "^4.4"
asyncstdlib = "^3.10"
exceptiongroup = { version = "^1.1.3", python = "<3.11" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.9"
strict = true
show_column_numbers = true
show_error_codes = true
files = "src/**/*.py"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["A", "B", "C4", "ERA", "F", "I", "PT", "S"]
ignore = ["A002", "B9", "PT011", "PT012"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**.py" = ["S101"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src --cov-report=term-missing --no-cov-on-fail --cov-fail-under=100"
